// Mocks generated by Mockito 5.3.0 from annotations
// in tv_series/test/data/repositories/tv_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:common/data/datasource/movie_local_data_source.dart' as _i6;
import 'package:common/data/models/movie_table.dart' as _i7;
import 'package:mockito/mockito.dart' as _i1;
import 'package:tv_series/data/datasources/tv_remote_data_source.dart' as _i3;
import 'package:tv_series/data/models/tv_detail_model.dart' as _i2;
import 'package:tv_series/data/models/tv_model.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeTvDetailResponse_0 extends _i1.SmartFake
    implements _i2.TvDetailResponse {
  _FakeTvDetailResponse_0(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

/// A class which mocks [TvRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvRemoteDataSource extends _i1.Mock
    implements _i3.TvRemoteDataSource {
  MockTvRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i5.TvModel>> getNowPlayingTvSeries() =>
      (super.noSuchMethod(Invocation.method(#getNowPlayingTvSeries, []),
              returnValue: _i4.Future<List<_i5.TvModel>>.value(<_i5.TvModel>[]))
          as _i4.Future<List<_i5.TvModel>>);
  @override
  _i4.Future<List<_i5.TvModel>> getPopularTvSeries() =>
      (super.noSuchMethod(Invocation.method(#getPopularTvSeries, []),
              returnValue: _i4.Future<List<_i5.TvModel>>.value(<_i5.TvModel>[]))
          as _i4.Future<List<_i5.TvModel>>);
  @override
  _i4.Future<_i2.TvDetailResponse> getTvDetail(int? id) =>
      (super.noSuchMethod(Invocation.method(#getTvDetail, [id]),
              returnValue: _i4.Future<_i2.TvDetailResponse>.value(
                  _FakeTvDetailResponse_0(
                      this, Invocation.method(#getTvDetail, [id]))))
          as _i4.Future<_i2.TvDetailResponse>);
  @override
  _i4.Future<List<_i5.TvModel>> getTvRecommendations(int? id) =>
      (super.noSuchMethod(Invocation.method(#getTvRecommendations, [id]),
              returnValue: _i4.Future<List<_i5.TvModel>>.value(<_i5.TvModel>[]))
          as _i4.Future<List<_i5.TvModel>>);
  @override
  _i4.Future<List<_i5.TvModel>> getTopRatedTvSeries() =>
      (super.noSuchMethod(Invocation.method(#getTopRatedTvSeries, []),
              returnValue: _i4.Future<List<_i5.TvModel>>.value(<_i5.TvModel>[]))
          as _i4.Future<List<_i5.TvModel>>);
}

/// A class which mocks [MovieLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieLocalDataSource extends _i1.Mock
    implements _i6.MovieLocalDataSource {
  MockMovieLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<String> insertWatchlist(_i7.MovieTable? movie) =>
      (super.noSuchMethod(Invocation.method(#insertWatchlist, [movie]),
          returnValue: _i4.Future<String>.value('')) as _i4.Future<String>);
  @override
  _i4.Future<String> removeWatchlist(_i7.MovieTable? movie) =>
      (super.noSuchMethod(Invocation.method(#removeWatchlist, [movie]),
          returnValue: _i4.Future<String>.value('')) as _i4.Future<String>);
  @override
  _i4.Future<_i7.MovieTable?> getMovieById(int? id) =>
      (super.noSuchMethod(Invocation.method(#getMovieById, [id]),
              returnValue: _i4.Future<_i7.MovieTable?>.value())
          as _i4.Future<_i7.MovieTable?>);
  @override
  _i4.Future<List<_i7.MovieTable>> getWatchlistMovies() =>
      (super.noSuchMethod(Invocation.method(#getWatchlistMovies, []),
              returnValue:
                  _i4.Future<List<_i7.MovieTable>>.value(<_i7.MovieTable>[]))
          as _i4.Future<List<_i7.MovieTable>>);
}
