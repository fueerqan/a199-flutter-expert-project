// Mocks generated by Mockito 5.1.0 from annotations
// in ditonton/test/helpers/test_helper.dart.
// Do not manually edit this file.

import 'dart:async' as _i8;
import 'dart:convert' as _i22;
import 'dart:typed_data' as _i23;

import 'package:common/common/failure.dart' as _i9;
import 'package:common/data/datasource/movie_local_data_source.dart' as _i2;
import 'package:common/data/models/movie_table.dart' as _i20;
import 'package:common/helper/database_helper.dart' as _i18;
import 'package:dartz/dartz.dart' as _i3;
import 'package:ditonton/domain/repositories/watchlist_repository.dart' as _i7;
import 'package:http/src/base_request.dart' as _i24;
import 'package:http/src/client.dart' as _i21;
import 'package:http/src/response.dart' as _i5;
import 'package:http/src/streamed_response.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;
import 'package:movies/data/datasource/movie_remote_data_source.dart' as _i14;
import 'package:movies/data/models/movie_detail_model.dart' as _i4;
import 'package:movies/data/models/movie_model.dart' as _i15;
import 'package:movies/domain/movie/movie.dart' as _i10;
import 'package:movies/domain/movie/movie_detail.dart' as _i13;
import 'package:movies/domain/repositories/movie_repository.dart' as _i12;
import 'package:sqflite/sqflite.dart' as _i19;
import 'package:tv_series/domain/entities/tv.dart' as _i11;
import 'package:tv_series/domain/entities/tv_detail.dart' as _i17;
import 'package:tv_series/domain/repositories/tv_repository.dart' as _i16;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeMovieLocalDataSource_0 extends _i1.Fake
    implements _i2.MovieLocalDataSource {}

class _FakeEither_1<L, R> extends _i1.Fake implements _i3.Either<L, R> {}

class _FakeMovieDetailResponse_2 extends _i1.Fake
    implements _i4.MovieDetailResponse {}

class _FakeResponse_3 extends _i1.Fake implements _i5.Response {}

class _FakeStreamedResponse_4 extends _i1.Fake implements _i6.StreamedResponse {
}

/// A class which mocks [WatchlistRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockWatchlistRepository extends _i1.Mock
    implements _i7.WatchlistRepository {
  MockWatchlistRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.MovieLocalDataSource get localDataSource => (super.noSuchMethod(
      Invocation.getter(#localDataSource),
      returnValue: _FakeMovieLocalDataSource_0()) as _i2.MovieLocalDataSource);
  @override
  _i8.Future<_i3.Either<_i9.Failure, List<_i3.Either<_i10.Movie, _i11.TvSeries>>>>
      getWatchlistMovies() => (super.noSuchMethod(
          Invocation.method(#getWatchlistMovies, []),
          returnValue: Future<_i3.Either<_i9.Failure, List<_i3.Either<_i10.Movie, _i11.TvSeries>>>>.value(
              _FakeEither_1<_i9.Failure,
                  List<_i3.Either<_i10.Movie, _i11.TvSeries>>>())) as _i8
          .Future<_i3.Either<_i9.Failure, List<_i3.Either<_i10.Movie, _i11.TvSeries>>>>);
}

/// A class which mocks [MovieRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieRepository extends _i1.Mock implements _i12.MovieRepository {
  MockMovieRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<_i3.Either<_i9.Failure, List<_i10.Movie>>> getNowPlayingMovies() =>
      (super.noSuchMethod(Invocation.method(#getNowPlayingMovies, []),
          returnValue: Future<_i3.Either<_i9.Failure, List<_i10.Movie>>>.value(
              _FakeEither_1<_i9.Failure, List<_i10.Movie>>())) as _i8
          .Future<_i3.Either<_i9.Failure, List<_i10.Movie>>>);
  @override
  _i8.Future<_i3.Either<_i9.Failure, List<_i10.Movie>>> getPopularMovies() =>
      (super.noSuchMethod(Invocation.method(#getPopularMovies, []),
          returnValue: Future<_i3.Either<_i9.Failure, List<_i10.Movie>>>.value(
              _FakeEither_1<_i9.Failure, List<_i10.Movie>>())) as _i8
          .Future<_i3.Either<_i9.Failure, List<_i10.Movie>>>);
  @override
  _i8.Future<_i3.Either<_i9.Failure, List<_i10.Movie>>> getTopRatedMovies() =>
      (super.noSuchMethod(Invocation.method(#getTopRatedMovies, []),
          returnValue: Future<_i3.Either<_i9.Failure, List<_i10.Movie>>>.value(
              _FakeEither_1<_i9.Failure, List<_i10.Movie>>())) as _i8
          .Future<_i3.Either<_i9.Failure, List<_i10.Movie>>>);
  @override
  _i8.Future<_i3.Either<_i9.Failure, _i13.MovieDetail>> getMovieDetail(
          int? id) =>
      (super.noSuchMethod(Invocation.method(#getMovieDetail, [id]),
          returnValue: Future<_i3.Either<_i9.Failure, _i13.MovieDetail>>.value(
              _FakeEither_1<_i9.Failure, _i13.MovieDetail>())) as _i8
          .Future<_i3.Either<_i9.Failure, _i13.MovieDetail>>);
  @override
  _i8.Future<_i3.Either<_i9.Failure, List<_i10.Movie>>> getMovieRecommendations(
          int? id) =>
      (super.noSuchMethod(Invocation.method(#getMovieRecommendations, [id]),
          returnValue: Future<_i3.Either<_i9.Failure, List<_i10.Movie>>>.value(
              _FakeEither_1<_i9.Failure, List<_i10.Movie>>())) as _i8
          .Future<_i3.Either<_i9.Failure, List<_i10.Movie>>>);
  @override
  _i8.Future<_i3.Either<_i9.Failure, String>> saveWatchlist(
          _i13.MovieDetail? movie) =>
      (super.noSuchMethod(Invocation.method(#saveWatchlist, [movie]),
              returnValue: Future<_i3.Either<_i9.Failure, String>>.value(
                  _FakeEither_1<_i9.Failure, String>()))
          as _i8.Future<_i3.Either<_i9.Failure, String>>);
  @override
  _i8.Future<_i3.Either<_i9.Failure, String>> removeWatchlist(
          _i13.MovieDetail? movie) =>
      (super.noSuchMethod(Invocation.method(#removeWatchlist, [movie]),
              returnValue: Future<_i3.Either<_i9.Failure, String>>.value(
                  _FakeEither_1<_i9.Failure, String>()))
          as _i8.Future<_i3.Either<_i9.Failure, String>>);
  @override
  _i8.Future<bool> isAddedToWatchlist(int? id) =>
      (super.noSuchMethod(Invocation.method(#isAddedToWatchlist, [id]),
          returnValue: Future<bool>.value(false)) as _i8.Future<bool>);
}

/// A class which mocks [MovieRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieRemoteDataSource extends _i1.Mock
    implements _i14.MovieRemoteDataSource {
  MockMovieRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<List<_i15.MovieModel>> getNowPlayingMovies() =>
      (super.noSuchMethod(Invocation.method(#getNowPlayingMovies, []),
              returnValue:
                  Future<List<_i15.MovieModel>>.value(<_i15.MovieModel>[]))
          as _i8.Future<List<_i15.MovieModel>>);
  @override
  _i8.Future<List<_i15.MovieModel>> getPopularMovies() => (super.noSuchMethod(
          Invocation.method(#getPopularMovies, []),
          returnValue: Future<List<_i15.MovieModel>>.value(<_i15.MovieModel>[]))
      as _i8.Future<List<_i15.MovieModel>>);
  @override
  _i8.Future<List<_i15.MovieModel>> getTopRatedMovies() => (super.noSuchMethod(
          Invocation.method(#getTopRatedMovies, []),
          returnValue: Future<List<_i15.MovieModel>>.value(<_i15.MovieModel>[]))
      as _i8.Future<List<_i15.MovieModel>>);
  @override
  _i8.Future<_i4.MovieDetailResponse> getMovieDetail(int? id) =>
      (super.noSuchMethod(Invocation.method(#getMovieDetail, [id]),
              returnValue: Future<_i4.MovieDetailResponse>.value(
                  _FakeMovieDetailResponse_2()))
          as _i8.Future<_i4.MovieDetailResponse>);
  @override
  _i8.Future<List<_i15.MovieModel>> getMovieRecommendations(int? id) =>
      (super.noSuchMethod(Invocation.method(#getMovieRecommendations, [id]),
              returnValue:
                  Future<List<_i15.MovieModel>>.value(<_i15.MovieModel>[]))
          as _i8.Future<List<_i15.MovieModel>>);
}

/// A class which mocks [TvRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvRepository extends _i1.Mock implements _i16.TvRepository {
  MockTvRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<_i3.Either<_i9.Failure, List<_i11.TvSeries>>> getNowPlayingTVs() =>
      (super.noSuchMethod(Invocation.method(#getNowPlayingTVs, []),
              returnValue:
                  Future<_i3.Either<_i9.Failure, List<_i11.TvSeries>>>.value(
                      _FakeEither_1<_i9.Failure, List<_i11.TvSeries>>()))
          as _i8.Future<_i3.Either<_i9.Failure, List<_i11.TvSeries>>>);
  @override
  _i8.Future<_i3.Either<_i9.Failure, List<_i11.TvSeries>>> getPopularTvs() =>
      (super.noSuchMethod(Invocation.method(#getPopularTvs, []),
              returnValue:
                  Future<_i3.Either<_i9.Failure, List<_i11.TvSeries>>>.value(
                      _FakeEither_1<_i9.Failure, List<_i11.TvSeries>>()))
          as _i8.Future<_i3.Either<_i9.Failure, List<_i11.TvSeries>>>);
  @override
  _i8.Future<_i3.Either<_i9.Failure, _i17.TvDetail>> getTvDetail(int? id) =>
      (super.noSuchMethod(Invocation.method(#getTvDetail, [id]),
              returnValue: Future<_i3.Either<_i9.Failure, _i17.TvDetail>>.value(
                  _FakeEither_1<_i9.Failure, _i17.TvDetail>()))
          as _i8.Future<_i3.Either<_i9.Failure, _i17.TvDetail>>);
  @override
  _i8.Future<_i3.Either<_i9.Failure, String>> saveWatchlist(
          _i17.TvDetail? detail) =>
      (super.noSuchMethod(Invocation.method(#saveWatchlist, [detail]),
              returnValue: Future<_i3.Either<_i9.Failure, String>>.value(
                  _FakeEither_1<_i9.Failure, String>()))
          as _i8.Future<_i3.Either<_i9.Failure, String>>);
  @override
  _i8.Future<_i3.Either<_i9.Failure, String>> removeWatchlist(
          _i17.TvDetail? detail) =>
      (super.noSuchMethod(Invocation.method(#removeWatchlist, [detail]),
              returnValue: Future<_i3.Either<_i9.Failure, String>>.value(
                  _FakeEither_1<_i9.Failure, String>()))
          as _i8.Future<_i3.Either<_i9.Failure, String>>);
  @override
  _i8.Future<bool> isAddedToWatchlist(int? id) =>
      (super.noSuchMethod(Invocation.method(#isAddedToWatchlist, [id]),
          returnValue: Future<bool>.value(false)) as _i8.Future<bool>);
  @override
  _i8.Future<_i3.Either<_i9.Failure, List<_i11.TvSeries>>>
      getWatchlistMovies() => (super.noSuchMethod(
              Invocation.method(#getWatchlistMovies, []),
              returnValue:
                  Future<_i3.Either<_i9.Failure, List<_i11.TvSeries>>>.value(
                      _FakeEither_1<_i9.Failure, List<_i11.TvSeries>>()))
          as _i8.Future<_i3.Either<_i9.Failure, List<_i11.TvSeries>>>);
  @override
  _i8.Future<_i3.Either<_i9.Failure, List<_i11.TvSeries>>> getTvRecommendations(
          int? id) =>
      (super.noSuchMethod(Invocation.method(#getTvRecommendations, [id]),
              returnValue:
                  Future<_i3.Either<_i9.Failure, List<_i11.TvSeries>>>.value(
                      _FakeEither_1<_i9.Failure, List<_i11.TvSeries>>()))
          as _i8.Future<_i3.Either<_i9.Failure, List<_i11.TvSeries>>>);
  @override
  _i8.Future<_i3.Either<_i9.Failure, List<_i11.TvSeries>>> getTopRatedTvs() =>
      (super.noSuchMethod(Invocation.method(#getTopRatedTvs, []),
              returnValue:
                  Future<_i3.Either<_i9.Failure, List<_i11.TvSeries>>>.value(
                      _FakeEither_1<_i9.Failure, List<_i11.TvSeries>>()))
          as _i8.Future<_i3.Either<_i9.Failure, List<_i11.TvSeries>>>);
}

/// A class which mocks [DatabaseHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseHelper extends _i1.Mock implements _i18.DatabaseHelper {
  MockDatabaseHelper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<_i19.Database?> get database =>
      (super.noSuchMethod(Invocation.getter(#database),
              returnValue: Future<_i19.Database?>.value())
          as _i8.Future<_i19.Database?>);
  @override
  _i8.Future<int> insertWatchlist(_i20.MovieTable? movie) =>
      (super.noSuchMethod(Invocation.method(#insertWatchlist, [movie]),
          returnValue: Future<int>.value(0)) as _i8.Future<int>);
  @override
  _i8.Future<int> removeWatchlist(_i20.MovieTable? movie) =>
      (super.noSuchMethod(Invocation.method(#removeWatchlist, [movie]),
          returnValue: Future<int>.value(0)) as _i8.Future<int>);
  @override
  _i8.Future<Map<String, dynamic>?> getMovieById(int? id) =>
      (super.noSuchMethod(Invocation.method(#getMovieById, [id]),
              returnValue: Future<Map<String, dynamic>?>.value())
          as _i8.Future<Map<String, dynamic>?>);
  @override
  _i8.Future<List<Map<String, dynamic>>> getWatchlistMovies() =>
      (super.noSuchMethod(Invocation.method(#getWatchlistMovies, []),
              returnValue: Future<List<Map<String, dynamic>>>.value(
                  <Map<String, dynamic>>[]))
          as _i8.Future<List<Map<String, dynamic>>>);
}

/// A class which mocks [Client].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpClient extends _i1.Mock implements _i21.Client {
  MockHttpClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<_i5.Response> head(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#head, [url], {#headers: headers}),
              returnValue: Future<_i5.Response>.value(_FakeResponse_3()))
          as _i8.Future<_i5.Response>);
  @override
  _i8.Future<_i5.Response> get(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#get, [url], {#headers: headers}),
              returnValue: Future<_i5.Response>.value(_FakeResponse_3()))
          as _i8.Future<_i5.Response>);
  @override
  _i8.Future<_i5.Response> post(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i22.Encoding? encoding}) =>
      (super.noSuchMethod(
              Invocation.method(#post, [url],
                  {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: Future<_i5.Response>.value(_FakeResponse_3()))
          as _i8.Future<_i5.Response>);
  @override
  _i8.Future<_i5.Response> put(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i22.Encoding? encoding}) =>
      (super.noSuchMethod(
              Invocation.method(#put, [url],
                  {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: Future<_i5.Response>.value(_FakeResponse_3()))
          as _i8.Future<_i5.Response>);
  @override
  _i8.Future<_i5.Response> patch(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i22.Encoding? encoding}) =>
      (super.noSuchMethod(
              Invocation.method(#patch, [url],
                  {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: Future<_i5.Response>.value(_FakeResponse_3()))
          as _i8.Future<_i5.Response>);
  @override
  _i8.Future<_i5.Response> delete(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i22.Encoding? encoding}) =>
      (super.noSuchMethod(
              Invocation.method(#delete, [url],
                  {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: Future<_i5.Response>.value(_FakeResponse_3()))
          as _i8.Future<_i5.Response>);
  @override
  _i8.Future<String> read(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#read, [url], {#headers: headers}),
          returnValue: Future<String>.value('')) as _i8.Future<String>);
  @override
  _i8.Future<_i23.Uint8List> readBytes(Uri? url,
          {Map<String, String>? headers}) =>
      (super.noSuchMethod(
              Invocation.method(#readBytes, [url], {#headers: headers}),
              returnValue: Future<_i23.Uint8List>.value(_i23.Uint8List(0)))
          as _i8.Future<_i23.Uint8List>);
  @override
  _i8.Future<_i6.StreamedResponse> send(_i24.BaseRequest? request) =>
      (super.noSuchMethod(Invocation.method(#send, [request]),
              returnValue:
                  Future<_i6.StreamedResponse>.value(_FakeStreamedResponse_4()))
          as _i8.Future<_i6.StreamedResponse>);
  @override
  void close() => super.noSuchMethod(Invocation.method(#close, []),
      returnValueForMissingStub: null);
}
